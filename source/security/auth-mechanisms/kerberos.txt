.. _ruby-authentication-kerberos:

=================
Kerberos (GSSAPI)
=================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: code example

Overview
--------

The Generic Security Services API (GSSAPI) authentication mechanism allows you to
use your principal name to authenticate to a Kerberos service.
You can use this mechanism only when authenticating to MongoDB Enterprise Advanced.

Code Placeholders
~~~~~~~~~~~~~~~~~

The code examples on this page use the following placeholders:

- ``<username>``: LDAP username.
- ``<hostname>``: Network address of your MongoDB deployment.
- ``<port>``: Port number of your MongoDB deployment. If you omit this parameter,
  the driver uses the default port number (``27017``). Specifying a port number is optional
  when connecting to a MongoDB Atlas cluster.
- ``<authentication_db>``: MongoDB database that contains the user's LDAP credentials.
  If you omit this parameter, the driver uses the default database (``admin``).

To use the code examples on this page, replace these placeholders with your own values.

Using GSSAPI Authentication in Your Application
-----------------------------------------------

To configure the MongoDB server to use Kerberos, see the
:manual:`server Kerberos documentation
</tutorial/control-access-to-mongodb-with-kerberos-authentication/>`.

To use the Kerberos authentication mechanism with the Ruby MongoDB driver,
you must install and load the `mongo_kerberos <https://rubygems.org/gems/mongo_kerberos>`__
library. To do so, add the following lines to your ``Gemfile``:

.. code-block:: ruby

  gem 'mongo', '~> 2'
  gem 'mongo_kerberos', '~> 2'

Then, add the following lines to your application code:

.. code-block:: ruby

  require 'mongo'
  require 'mongo_kerberos'

If using Kerberos authentication with **MRI**, you must establish a Kerberos
session to the driver. This session is used by the driver to prove the user's identity to
the server. You must ensure that the host system is
configured for Kerberos authentication. To learn more about configuring the host system
to use Kerberos, see the `Kerberos documentation
<https://web.mit.edu/kerberos/krb5-latest/doc/admin/install_clients.html>`__
or your operating system documentation for details. Use the `kinit utility
<https://web.mit.edu/kerberos/krb5-latest/doc/user/user_commands/kinit.html>`__
to establish a Kerberos session.

If using Kerberos authentication with **JRuby**, you can externally establish the Kerberos
session to the driver using the process described above for MRI. Alternatively, you can directly
provide the password to the driver by using client configuration. You can also provide the
path to a keytab file by storing the configuration in the ``java.security.auth.login.config`` system property.
If using JRuby, you must configure the Java Runtime Environment to use Kerberos. To learn more, see the 
`MongoDB Java Driver Kerberos documentation
<https://mongodb.github.io/mongo-java-driver/4.0/driver/tutorials/authentication/#gssapi>`_
for more information.

.. note::

  Per the server Kerberos documentation, you must specify the FQDN of the host
  running MongoDB when using Kerberos authentication.

Select the :guilabel:`Connection String` or :guilabel:`Client Options` tab to
see the corresponding syntax for connecting to MongoDB with Kerberos authentication:

.. tabs::

   .. tab:: Connection String
      :tabid: connection-string

      .. code-block:: ruby

         client = Mongo::Client.new("mongodb://<username>@<hostname>[:<port>]/<authentication_db>?authMechanism=GSSAPI")


   .. tab:: Client Options
      :tabid: mongo-credential

      .. code-block:: ruby
         :emphasize-lines: 1

         client = Mongo::Client.new(['<hostname>[:<port>]'],
                                    auth_mech: :gssapi,
                                    user: 'myapp/appuser@MYREALM')

.. note::

  If you use a connection string to connect to MongoDB, ensure that you to percent-encode any
  special characters that appear in the username.

API Documentation
-----------------

To learn more about any of the methods or types discussed on this
page, see the following API documentation:

- `Mongo::Client <{+api-root+}/Mongo/Client.html>`__
